console.log("üöÄ content.js loaded");

function replaceLink(link) {
  if (link.includes("fxtwitter.com")) return link; // –≤–∂–µ –æ–±—Ä–æ–±–ª–µ–Ω–æ
  return link
    .replace("x.com", "fxtwitter.com");
}


async function overrideClipboard() {
  try {
    const url = await navigator.clipboard.readText();
    if (url.includes("x.com") || url.includes("twitter.com")) {
      const newUrl = replaceLink(url);
      await navigator.clipboard.writeText(newUrl);
      console.log(`‚úÖ –ü–æ—Å–∏–ª–∞–Ω–Ω—è –∑–∞–º—ñ–Ω–µ–Ω–æ: ${newUrl}`);
    }
  } catch (err) {
    console.error("‚ùå Clipboard error:", err);
  }
}

const observer = new MutationObserver(() => {
  const menuItems = document.querySelectorAll('div[role="menuitem"]');

  menuItems.forEach((item) => {
    // –í–∂–µ –æ–±—Ä–æ–±–ª–µ–Ω–æ ‚Äî –ø—Ä–æ–ø—É—Å–∫–∞—î–º–æ
    if (item.dataset.fxHandled) return;

    const text = item.innerText?.toLowerCase();
    const icon = item.querySelector('svg')?.outerHTML;

    // –Ü–∫–æ–Ω–∫–∞ —É –∫–Ω–æ–ø–∫–∏ "–∫–æ–ø—ñ—é–≤–∞—Ç–∏" –∑–∞–∑–≤–∏—á–∞–π –∑ –ø–æ—Å–∏–ª–∞–Ω–Ω—è–º (link)
    const isCopyButton =
      text.includes("–∫–æ–ø") || // —É–∫—Ä/—Ä–æ—Å/–∞–Ω–≥–ª "–∫–æ–ø—ñ—é–≤–∞—Ç–∏"/"–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å"/"copy"
      (icon && icon.includes("link"));

    if (isCopyButton) {
      item.dataset.fxHandled = "true";
      item.addEventListener("click", () => {
        console.log("üîó –ö–Ω–æ–ø–∫–∞ –∫–æ–ø—ñ—é–≤–∞–Ω–Ω—è –Ω–∞—Ç–∏—Å–Ω—É—Ç–∞, —á–µ–∫–∞—î–º–æ –±—É—Ñ–µ—Ä...");
        setTimeout(overrideClipboard, 300);
      });
    }
  });
});

// –°–ø–æ—Å—Ç–µ—Ä—ñ–≥–∞—î–º–æ –∑–∞ –≤—Å—ñ–º —Ç—ñ–ª–æ–º —Å—Ç–æ—Ä—ñ–Ω–∫–∏
observer.observe(document.body, {
  childList: true,
  subtree: true,
});
